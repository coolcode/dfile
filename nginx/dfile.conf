upstream s3 {
    ip_hash;
    server dfile.sgp1.digitaloceanspaces.com;
}

server {
	listen 80 ;
	listen [::]:80 ;

	root /var/www/html;

	index index.html index.nginx-debian.html;
    server_name dfile.app www.dfile.app; # managed by Certbot
    
	location / {
		# First attempt to serve request as file, then as directory, then fall back to displaying a 404.
        # rewrite ^/Qm(.*) /down/Qm$1 last;
        # Assumes IPFS hash starts with Qm
        rewrite ^/Qm(.*) https://dfile.sgp1.digitaloceanspaces.com/dfile/Qm$1 permanent;
        root /var/www/html;
		try_files $uri $uri/ @s3 =404;
        limit_except GET {
            # For requests that *aren't* a GET
            proxy_pass http://localhost:8000;
        }        
	}

    location /up {
        proxy_pass http://localhost:8000/up; 
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        client_max_body_size  100M;
    }

    location /d {
        resolver 8.8.8.8;
        #proxy_pass http://localhost:8000/down;
        proxy_pass https://s3/dfile;
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
    
    error_page  404              /404;

    client_max_body_size 100M;
    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/dfile.app/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/dfile.app/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}  